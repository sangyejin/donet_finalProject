<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper 
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="memberMapper">

	<resultMap id="memberResultSet" type="Member">
		<id property="userId" column="user_ID"/>
		<result property="userPwd" column="user_PWD"/>
		<result property="userName" column="user_NAME"/>
		<result property="userNick" column="user_NICK"/>
		<result property="address" column="ADDRESS"/>
		<result property="email" column="EMAIL"/>
		<result property="phone" column="PHONE"/>
		<result property="birthdate" column="BIRTHDATE"/>
		<result property="userRole" column="user_ROLE"/>
		<result property="status" column="STATUS"/>
		<result property="enrollDate" column="user_CREATE_DATE"/>
		<result property="modifyDate" column="modify_DATE"/>
		<result property="point" column="POINT"/>		
	</resultMap>

	<select id="loginMember" parameterType="Member" resultMap="memberResultSet">
		<!-- 암호화 전	
		select * from member
		where user_id=#{userId} and user_pwd=#{userPwd} and status='Y'
		-->
		<!-- 암호화 후 -->
		select * from member 
		where user_id=#{userId} and status='Y'
		
	</select>
	
	<insert id="insertMember" parameterType="Member">
		insert into member
		values(#{userId}, #{userPwd}, #{userName}, #{userNick}, #{address}, #{email}, #{phone}, #{birthdate}, #{userRole}, default, sysdate, sysdate, #{point})
	</insert>
	
	<update id="updateMember" parameterType="Member">
		update member
		set user_Nick=#{userNick} ,address=#{address}, email=#{email}, phone=#{phone}, birthdate=#{birthdate}, user_role=#{userRole}, modify_date=sysdate
		where user_id=#{userId}
	</update>
	
	<delete id="deleteMember" parameterType="string">
		update member
		set status='N'
		where user_id=#{userId}
	</delete>
	
	<update id="updatePwdMember" parameterType="Member">
		update member
		set user_pwd=#{userPwd}
		where user_id=#{userId}
	</update>
	
	<select id="findUserIdMember" parameterType="Member" resultMap="memberResultSet">
		select user_id from member
		where email=#{email} and phone=#{phone} and status='Y'
	</select>
	
	<select id="findUserPwdMember" parameterType="Member" resultMap="memberResultSet">
		select * from member
		where user_id=#{userId} and user_name=#{userName} and email=#{email} and status='Y'
	</select>
	
	<update id="pointUpdate" parameterType="Member">
		update member set point=#{point} where user_Id=#{userId}
	</update>
	
	<resultMap id="bankResultMap" type="Bank">
		<id property="bankNo" column="BANK_NO"/>
		<result property="bankName" column="BANK_NAME"/>
	</resultMap>
	
	<select id="selectBkList" resultMap="bankResultMap">
		SELECT *
		FROM BANK
	</select>
	
	<insert id="insertCard" parameterType="Payment">
		INSERT INTO PAYMENT VALUES
		(SEQ_PAYMENT.NEXTVAL, #{userId}, #{cardNo},
		 #{payCvc}, #{payExpiry}, #{payName}, #{bNo})
	</insert>
	
	<update id="updatePoint" parameterType="Payment">
		UPDATE MEMBER
		SET POINT = POINT + #{pointAmount}
		WHERE USER_ID = #{userId}
	</update>
	
	
	<select id="selectThisUser" resultMap="memberResultSet"  parameterType="Member">
		SELECT *
		FROM MEMBER
		WHERE USER_ID = #{userId}
	</select>
	
	<update id="updatePointMember" parameterType="Member">
		UPDATE MEMBER
		SET POINT = POINT + #{point}
		WHERE USER_ID = #{userId}
	</update>
	
<!--출석할때마다 1500포인트적립  -->
	<select id="getMemberPoint" parameterType="Member" resultMap="memberResultSet">
		select * from member 
		where user_Id=#{userId}
	</select>
	
	<!-- 회원 목록 -->
	<select id="selectUserListCount" resultType="_int">
		SELECT COUNT(*)
		FROM MEMBER
		WHERE STATUS='Y' OR STATUS='N'
	</select>
	
	<select id="selectUserList" resultMap = "memberResultSet">
		SELECT *
		FROM MEMBER
		WHERE STATUS='Y'
		ORDER BY USER_ID DESC
	</select>


	
</mapper>
